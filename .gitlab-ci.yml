variables:
  # Use a shallow clone depth to speed up the CI build.
  # See: https://docs.gitlab.com/ee/ci/large_repositories/
  BUILD_NAME: Traffic3D
  GIT_DEPTH: 10

cache:
  key: "$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$BUILD_TARGET"
  paths:
    - $BUILD_NAME/Library/

stages:
  - prepare
  - test
  - build

meta-build-image:
  stage: prepare
  image: docker:stable
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd .meta
    - docker build -t $CI_REGISTRY/traffic3d/traffic3d/buildimage:latest .
    - docker push $CI_REGISTRY/traffic3d/traffic3d/buildimage:latest
  only:
    changes:
      - .meta/Dockerfile
  tags:
    - dind

.unity_before_script: &unity_before_script
  before_script:
    - chmod +x ./ci/before_script.sh && ./ci/before_script.sh

.test: &test
  image: registry.gitlab.com/traffic3d/traffic3d/buildimage
  except:
    - tags
  stage: test
  <<: *unity_before_script
  script:
    - chmod +x ./ci/test.sh && ./ci/test.sh
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$TEST_PLATFORM-results"
    when: always
    paths:
      - $(pwd)/$TEST_PLATFORM-results.xml

test-playmode:
  <<: *test
  variables:
    TEST_PLATFORM: playmode

.build: &build
  image: registry.gitlab.com/traffic3d/traffic3d/buildimage
  except:
    - tags
  stage: build
  <<: *unity_before_script
  script:
    - chmod +x ./ci/build.sh && ./ci/build.sh
  artifacts:
    paths:
      - ./$BUILD_NAME/Builds/

build-StandaloneLinux64:
  <<: *build
  variables:
    BUILD_TARGET: StandaloneLinux64

build-StandaloneWindows64:
  <<: *build
  variables:
    BUILD_TARGET: StandaloneWindows64

build-StandaloneOSX:
  <<: *build
  variables:
    BUILD_TARGET: StandaloneOSX
